h1. oAuthify

This is a library which allows you to connect to an oAuth provider and access protected resources using the oAuth protocol. This works both with and without CodeIgniter, but it does require my MY_Input.php hack for CodeIgniter to allow the tokens to be passed through.

h3. Requirements

  # PHP5.1+
  # cURL Extension
  
h3. Usage

To begin with, you need to load the class. If you aren't using CodeIgniter, you need to pass your application's root URL through the constructor. If you are, the class will pull it from your config file.

<pre>
//CI
$this->load->library("oauth");

//Non-CI
require 'oauth.php';
$OAUTH = new Oauth("http://your_apps_url_here.com");
</pre>

Next you need to set the site you want to connect to, with your consumer key and consumer secret, along with the callback path (MUST end in a forward slash). You may also need to set the request_token_path, the access_token_path and the authorize_path.

<pre>
//CI
$this->oauth->set_site("http://twitter.com", "CONSUMER_KEY", "CONSUMER_SECRET")
            ->callback = 'oauth/callback';

//Non-CI
$OAUTH->set_site("http://twitter.com", "CONSUMER_KEY", "CONSUMER_SECRET")
      ->callback = 'oauth/callback';
</pre>

Then, you need to get a request token from the service provider, and get the user's authorization. To do this you can call two simple functions:

<pre>
//CI
$this->oauth->get_request_token()
            ->get_user_authorization();
            
//Non-CI
$OAUTH->get_request_token()
      ->get_user_authorization();
</pre>

This will redirect to the service provider, obtain authorization and return with a token in the querystring. You then need to pass that to gain an access token, with which you can get resources:

<pre>
//CI
$this->oauth->get_access_token($_GET['oauth_token']);

//Non-CI
$OAUTH->get_access_token($_GET['oauth_token']);
</pre>

You are now fully authorized to get resources. You can then make authorized calls by using the request() method.

<pre>
//CI
$this->oauth->request('http://twitter.com', array('any' => 'parameters', 'here'));
</pre>

h3. Functions

This class has five major functions for you to use:

  # set_site(service provider's URL, consumer key, consumer secret) - sets the site, consumer key and consumer secret variables
  # get_request_token() - gets a request token from the service provider
  # get_user_authorization() - redirects to the service provider and asks for user authorization. Returns the oauth_token inside the query string.
  # get_access_token(authorized request token) - obtains an access token with the request token passed through.
  # request(url, parameters, [HTTP method]) - makes an authenticated request to the url, passing the parameters through the HTTP method, which defaults to POST.
  
You may also have to set the following variables:

  # request_token_path - the path to the service provider's request token URL. relative to the base url set in set_site()
  # access_token_path - the path to the service provider's access token URL. relative to the base url set in set_site()
  # authorize_path - the path to the service provider's user authorization URL. relative to the base url set in set_site()
  # signature_method - sets the method to sign requests with - can be HMAC-SHA1 or PLAINTEXT at the moment.

h3. Todo

  # Add support for RSA-SHA1
  
h3. Download

You can download the latest version, along with all my other libraries by cloning this Git repository stored on GitHub. You can also find a ".zip of the class and this readme file on my website":http://jamierumbelow.net/code.